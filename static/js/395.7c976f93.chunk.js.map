{"version":3,"file":"static/js/395.7c976f93.chunk.js","mappings":"qPAEaA,EAAOC,EAAAA,EAAAA,GAAH,8HASJC,EAAWD,EAAAA,EAAAA,GAAH,2DAIRE,EAAWF,EAAAA,EAAAA,IAAH,oG,+JCbRG,EAAQH,EAAAA,EAAAA,EAAH,iIAOLI,EAAcJ,EAAAA,EAAAA,GAAH,mFAMXK,EAASL,EAAAA,EAAAA,GAAH,+IAQNM,EAAaN,EAAAA,EAAAA,KAAH,4C,uMCpBVO,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,SAAC,KAAD,UACGA,EAAKC,OAAS,GACXD,EAAKE,MAAM,EAAG,IAAIC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC5C,OACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,gBACEC,IACED,EACI,kCAAoCA,EACpCE,EAENC,IAAKJ,KAEP,uCAAeD,MACf,kCAAUC,SAXCF,EAelB,IACDJ,EAAKG,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC/B,OACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,gBACEC,IACED,EACI,kCAAoCA,EACpCE,EAENC,IAAKJ,KAEP,uCAAeD,MACf,kCAAUC,SAXCF,EAelB,KAGV,E,4DCND,EA/Ba,WACX,IAAQA,GAAOO,EAAAA,EAAAA,MAAPP,GACR,GAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOZ,EAAP,KAAaa,EAAb,KACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,GAAUb,GAFjC,QAEUJ,EAFV,QAGaC,SACPY,GAAQ,OAAIb,IACZe,GAAY,IALlB,gDAQIG,EAAAA,GAAAA,MAAY,mCARhB,0DADc,uBAAC,WAAD,wBAYdC,EACD,GAAE,CAACf,IAEAU,GAEA,8BACE,SAACf,EAAD,CAAUC,KAAMA,OAIb,SAAC,KAAD,oDAEV,C","sources":["components/CastList/CastList.styled.js","components/ReviewsList/ReviewsList.styled.js","components/CastList/CastList.jsx","pages/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const CastItem = styled.li`\n  width: calc((100% - 80px) / 5);\n`;\n\nexport const CastInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  color: #161616;\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.p`\n  color: #161616;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n`;\nexport const ReviewsInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const Review = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  border-bottom: 1px solid #161616;\n  padding-bottom: 8px;\n`;\n\nexport const Reviewinfo = styled.span`\n  font-weight: 400;\n`;\n","import placeholder from '../../Images/placeholder.webp';\nimport { CastInfo, CastItem, List } from './CastList.styled';\n\nexport const CastList = ({ cast }) => {\n  return (\n    <List>\n      {cast.length > 15\n        ? cast.slice(0, 15).map(({ id, character, name, profile_path }) => {\n            return (\n              <CastItem key={id}>\n                <CastInfo>\n                  <img\n                    src={\n                      profile_path\n                        ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                        : placeholder\n                    }\n                    alt={name}\n                  />\n                  <p>Character: {character}</p>\n                  <p>Name: {name}</p>\n                </CastInfo>\n              </CastItem>\n            );\n          })\n        : cast.map(({ id, character, name, profile_path }) => {\n            return (\n              <CastItem key={id}>\n                <CastInfo>\n                  <img\n                    src={\n                      profile_path\n                        ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                        : placeholder\n                    }\n                    alt={name}\n                  />\n                  <p>Character: {character}</p>\n                  <p>Name: {name}</p>\n                </CastInfo>\n              </CastItem>\n            );\n          })}\n    </List>\n  );\n};\n","import { CastList } from 'components/CastList/CastList';\nimport { Title } from 'components/ReviewsList/ReviewsList.styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchCast } from 'services/fetch-app';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        const cast = await fetchCast(id);\n        if (cast.length) {\n          setCast([...cast]);\n          setIsLoaded(true);\n        }\n      } catch (error) {\n        toast.error('We can`t find cast of this film');\n      }\n    }\n    getCast();\n  }, [id]);\n\n  if (isLoaded) {\n    return (\n      <section>\n        <CastList cast={cast} />\n      </section>\n    );\n  } else {\n    return <Title>Sorry, there is no cast for this movie</Title>;\n  }\n};\n\nexport default Cast;\n"],"names":["List","styled","CastItem","CastInfo","Title","ReviewsInfo","Review","Reviewinfo","CastList","cast","length","slice","map","id","character","name","profile_path","src","placeholder","alt","useParams","useState","setCast","isLoaded","setIsLoaded","useEffect","fetchCast","toast","getCast"],"sourceRoot":""}