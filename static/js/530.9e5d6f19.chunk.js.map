{"version":3,"file":"static/js/530.9e5d6f19.chunk.js","mappings":"+QAEaA,EAAOC,EAAAA,EAAAA,KAAH,yJASJC,EAAQD,EAAAA,EAAAA,MAAH,oPAaLE,EAAeF,EAAAA,EAAAA,OAAH,6SAgBZG,EAAQH,EAAAA,EAAAA,KAAH,wH,0NCtCLI,EAAUJ,EAAAA,EAAAA,IAAH,wDAKPK,EAASL,EAAAA,EAAAA,IAAH,+DAKNM,EAAON,EAAAA,EAAAA,IAAH,sGAOJO,EAASP,EAAAA,EAAAA,GAAH,wD,SCjBNQ,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjBC,EACND,EADMC,MAAOC,EACbF,EADaE,YAAaC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAGlE,OACE,UAACX,EAAD,YACE,SAACC,EAAD,CACEW,IAAK,kCAAoCL,EACzCM,IAAKP,KAEP,UAACJ,EAAD,YACE,0BACGI,EADH,KACYE,GAAgBA,EAAaM,MAAM,EAAG,GADlD,QAGA,yCAAgC,GAAfL,GAAmBM,UAApC,QACA,sCACA,uBAAIL,KACJ,oCACA,SAACP,EAAD,UACGQ,EAAOK,OAAS,EACbL,EACGG,MAAM,EAAG,GACTG,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAnB,IACZT,EAAOM,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,GAAnB,WAK7B,E,UC4CD,EAzDqB,WACnB,IAkBc,YAlBNA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOnB,EAAP,KAAcoB,EAAd,KACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KAeA,IAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEwBC,EAAAA,EAAAA,IAAgBT,GAFxC,OAEUf,EAFV,OAGIoB,EAASpB,GACTsB,GAAY,GAJhB,gDAMIG,EAAAA,GAAAA,MAAY,2CANhB,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACX,IAEAM,EACF,OACE,6BACE,SAAC,KAAD,CAAYM,GAAI,CAAEC,KAAK,GAAD,2BAAKX,EAASY,aAAd,aAAK,EAAgBD,YAArB,QAA6B,MAAnD,UACE,UAAC,KAAD,YACE,SAAC,MAAD,CAAaE,MAAO,CAAEC,MAAO,GAAIC,OAAQ,MAD3C,gBAKF,UAAC,KAAD,YACE,SAACjC,EAAD,CAAUC,MAAOA,KACjB,UAAC,KAAD,YACE,yBACE,SAAC,KAAD,CACE2B,GAAG,OACHE,MAAO,CAAED,KAAK,GAAD,2BAAKX,EAASY,aAAd,aAAK,EAAgBD,YAArB,QAA6B,MAF5C,qBAOF,yBACE,SAAC,KAAD,CACED,GAAG,UACHE,MAAO,CAAED,KAAK,GAAD,2BAAKX,EAASY,aAAd,aAAK,EAAgBD,YAArB,QAA6B,MAF5C,2BAQJ,SAAC,EAAAK,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAMX,C","sources":["components/SearchBar/SearchBar.styled.js","components/OneMovie/OneMovie.styled.js","components/OneMovie/OneMovie.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  overflow: hidden;\n  margin: 0 auto 12px auto;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font-size: 20px;\n  border: 1px solid #dbdbdb;\n  border-radius: 20px;\n  outline: none;\n  padding-left: 18px;\n  padding-right: 4px;\n  height: 40px;\n  margin-right: 12px;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  height: 40px;\n  padding-left: 10px;\n  padding-right: 10px;\n  border: 0;\n  border-radius: 20px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Label = styled.span`\n  display: flex;\n  justify-content: center;\n  gap: 8px;\n  font: inherit;\n  font-size: 20px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const Poster = styled.img`\n  width: 320px;\n  object-fit: cover;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  color: #161616;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  gap: 12px;\n`;\n","import { Genres, Info, Poster, Wrapper } from './OneMovie.styled';\n\nexport const OneMovie = ({ movie }) => {\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    movie;\n\n  return (\n    <Wrapper>\n      <Poster\n        src={'https://image.tmdb.org/t/p/w500' + poster_path}\n        alt={title}\n      />\n      <Info>\n        <h2>\n          {title} ({release_date && release_date.slice(0, 4)})\n        </h2>\n        <p>User Score: {(vote_average * 10).toFixed()}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <Genres>\n          {genres.length > 3\n            ? genres\n                .slice(0, 3)\n                .map(genre => <li key={genre.id}>{genre.name}</li>)\n            : genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n        </Genres>\n      </Info>\n    </Wrapper>\n  );\n};\n","import { BiArrowBack } from 'react-icons/bi';\nimport { Outlet, useLocation, useParams } from 'react-router';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { fetchMoviesById } from 'services/fetch-app';\nimport { Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  ButtonsList,\n  StyledLink,\n  Wrapper,\n} from 'components/SharedLayout/SharedLayout.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { OneMovie } from 'components/OneMovie/OneMovie';\nimport { Label } from 'components/SearchBar/SearchBar.styled';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const [movie, setMovie] = useState({});\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        const movie = await fetchMoviesById(id);\n        setMovie(movie);\n        setIsLoaded(true);\n      } catch (error) {\n        toast.error('Something went wrong, try one more time');\n      }\n    }\n    fetchMovie();\n  }, [id]);\n\n  if (isLoaded) {\n    return (\n      <main>\n        <StyledLink to={{ from: `${location.state?.from ?? '/'}` }}>\n          <Label>\n            <BiArrowBack style={{ width: 20, height: 24 }} />\n            Go Back\n          </Label>\n        </StyledLink>\n        <Wrapper>\n          <OneMovie movie={movie} />\n          <ButtonsList>\n            <li>\n              <StyledLink\n                to=\"cast\"\n                state={{ from: `${location.state?.from ?? '/'}` }}\n              >\n                Cast\n              </StyledLink>\n            </li>\n            <li>\n              <StyledLink\n                to=\"reviews\"\n                state={{ from: `${location.state?.from ?? '/'}` }}\n              >\n                Rewiews\n              </StyledLink>\n            </li>\n          </ButtonsList>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </Wrapper>\n      </main>\n    );\n  }\n};\n\nexport default MovieDetails;\n"],"names":["Form","styled","Input","SearchButton","Label","Wrapper","Poster","Info","Genres","OneMovie","movie","title","poster_path","release_date","vote_average","overview","genres","src","alt","slice","toFixed","length","map","genre","name","id","useParams","location","useLocation","useState","setMovie","isLoaded","setIsLoaded","useEffect","fetchMoviesById","toast","fetchMovie","to","from","state","style","width","height","Suspense","fallback","Loader"],"sourceRoot":""}